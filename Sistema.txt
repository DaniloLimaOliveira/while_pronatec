Relátorios - Financeiro de alunos (validar campo), depois de subimeter não desabilitar o botão
Relátorios - Financeiro de professores

Rever __toString das Entitys e Admin
Contexto do usuário de acordo com a região (realizar filtro nos admins)
Utilizar banco de dados mysql
Melhorar layout da aplicação de maneira geral (Aula grid)
verificar formato do texto no excel (utf_8)
Resetar senha - Configurar envio de e-mail, enviando e-mail no assunto
Gerar certificado por profissional com cpf, de acordo com a carga horaria e curso
Relacionamento de turma com o apoio


----------------------------------------------------------------------------------------------------------
public function createQuery($context = 'list')
{
    $query = parent::createQuery($context);
    $query->andWhere(
        $query->expr()->eq($query->getRootAliases()[0] . '.my_field', ':my_param')
    );
    $query->setParameter('my_param', 'my_value');
    return $query;
}
------------------------------------------------------------------------------------------------------------------       	
$user = $this->securityContext->getToken()->getUser();
throw new AccessDeniedException();
--------------------------------------------------------------------------------------------------------------------
Segurança das action customizadas		
		
		role_hierarchy:
			- ROLE_PRONATEC_ADMIN_AULA_SAVE
			- ROLE_PRONATEC_ADMIN_AULA_LIST_FREQUENCIA
			- ROLE_PRONATEC_ADMIN_AULA_REGISTER
		
        - { path: ^/admin/aula/\d+/register, role: [ROLE_PRONATEC_ADMIN_AULA_REGISTER] }

--------------------------------------------------------------------------------------------------------------------

$formMapper->getFormBuilder()->addEventListener(FormEvents::PRE_SET_DATA,
            function (FormEvent $event) use ($formMapper, $admin)
            {
                $form = $event ->getForm();
                $subject = $admin->getSubject($event->getData());
            }
         );