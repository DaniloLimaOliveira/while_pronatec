# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'pt_BR'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    admin_success_handler:
        class: App\Security\AuthenticationHandler
        arguments: [ '@service_container' ]

    # Fix Sonata User Bundle controller private service getter
    fos_user.util.token_generator:
        alias: 'fos_user.util.token_generator.default'
        public: true

    #Administração
    pronatec.admin.aluno:
          class: App\Admin\AlunoAdmin
          tags:
            - { name: sonata.admin, manager_type: orm, group: Administração, label: Alunos, show_in_dashboard: false }
          arguments: [~, App\Entity\Aluno, App\Controller\AlunoController]

    pronatec.admin.matricula:
              class: App\Admin\MatriculaAdmin
              tags:
                - { name: sonata.admin, manager_type: orm, group: Administração, label: Matrículas }
              arguments: [~, App\Entity\Matricula, App\Controller\MatriculaController]

    pronatec.admin.aula:
          class: App\Admin\AulaAdmin
          tags:
            - { name: sonata.admin, manager_type: orm, group: Administração, label: Aulas }
          arguments: [~, App\Entity\Aula, ~]

    pronatec.admin.frequencia:
              class: App\Admin\FrequenciaAdmin
              tags:
                - { name: sonata.admin, manager_type: orm, group: Administração, label: Frequências }
              arguments: [~, App\Entity\Frequencia, ~]

    #Coordenação
    pronatec.admin.polo:
              class: App\Admin\PoloAdmin
              tags:
                - { name: sonata.admin, manager_type: orm, group: Coordenação, label: Polos}
              arguments: [~, App\Entity\Polo, ~]

    pronatec.admin.curso:
          class: App\Admin\CursoAdmin
          tags:
            - { name: sonata.admin, manager_type: orm, group: Coordenação, label: Cursos }
          arguments: [~, App\Entity\Curso, App\Controller\CursoController]

    pronatec.admin.disciplina:
          class: App\Admin\DisciplinaAdmin
          tags:
            - { name: sonata.admin, manager_type: orm, group: Coordenação, label: Disciplinas }
          arguments: [~, App\Entity\Disciplina, App\Controller\DisciplinaController]

    pronatec.admin.turma:
          class: App\Admin\TurmaAdmin
          tags:
            - { name: sonata.admin, manager_type: orm, group: Coordenação, label: Turmas }
          arguments: [~, App\Entity\Turma, App\Controller\TurmaController]

    pronatec.admin.colaborador:
          class: App\Admin\ColaboradorAdmin
          tags:
            - { name: sonata.admin, manager_type: orm, group: Coordenação, label: Colaboradores }
          arguments: [~, App\Entity\Colaborador, App\Controller\ColaboradorController]

    pronatec.admin.cagaHoraria:
          class: App\Admin\CargaHorariaAdmin
          tags:
            - { name: sonata.admin, manager_type: orm, group: Coordenação, label: Carga Horária }
          arguments: [~, App\Entity\CargaHoraria, App\Controller\CargaHorariaController]

    #Professor
    pronatec.admin.diarioClasse:
        class: App\Admin\DiarioClasseAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: Professor, label: Diário de classe }
        arguments: [null, null, App\Controller\DiarioClasseController]

    #Relatórios
    pronatec.admin.relatorioAluno:
        class: App\Admin\RelatorioAlunoAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: Relatórios, label: Financeiros (Alunos) }
        arguments: [null, null, App\Controller\RelatorioAlunoController]

    pronatec.admin.relatorioProfessor:
            class: App\Admin\RelatorioProfessorAdmin
            tags:
                - { name: sonata.admin, manager_type: orm, group: Relatórios, label: Financeiros (Professores) }
            arguments: [null, null, App\Controller\RelatorioProfessorController]